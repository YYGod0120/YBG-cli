{"version":3,"sources":["../src/compile/extractMd.ts","../src/utils/time.ts","../src/constant/content.ts","../src/compile/HtmlToNext.ts","../src/create/writeFiles.ts","../src/create/EssayCss.ts","../src/utils/randomColor.ts","../src/node/cli.ts","../src/create/createMD.ts","../src/create/createImg.ts","../src/remove/removePage.ts","../src/create/createFileData.ts","../src/utils/transformType.ts","../src/utils/sortByDate.ts","../src/deploy/index.ts","../src/utils/readConfig.ts","../src/utils/translate.ts"],"sourcesContent":["import fs from \"fs\";\r\nimport matter from \"gray-matter\";\r\nimport { marked } from \"marked\";\r\nimport { UTCToString } from \"../utils/time\";\r\nimport path from \"path\";\r\nimport { basePath, makeImportPic } from \"../constant/content\";\r\nimport { HtmlToNext } from \"./HtmlToNext\";\r\nimport { translateWord } from \"../utils/translate\";\r\nconst _postFolder = path.join(basePath, \"/_posts\");\r\n\r\nexport type mdFile = {\r\n  id: string;\r\n  mdMatter: matter.GrayMatterFile<string>;\r\n  mdHtml: string;\r\n  mdEnHtml?: string;\r\n  other?: {\r\n    picPath: string;\r\n  };\r\n};\r\n// * hash唯一化\r\nfunction simpleHash(input: string) {\r\n  let hash = 0;\r\n  for (let i = 0; i < input.length; i++) {\r\n    hash += input.charCodeAt(i);\r\n  }\r\n  return JSON.stringify(hash % 1000); // 取模以确保哈希值在一定范围内\r\n}\r\nexport async function compileFile(project?: string): Promise<mdFile[]> {\r\n  let compiledFiles: mdFile[] = [];\r\n  let fileList = fs.readdirSync(_postFolder);\r\n\r\n  if (project) {\r\n    fileList = fileList.filter((file) => {\r\n      return file === `${project}.md`;\r\n    });\r\n  }\r\n  for (const file of fileList) {\r\n    const filePath = path.join(_postFolder, file);\r\n    const fileContent = fs.readFileSync(filePath, \"utf-8\");\r\n    const parsedFile = matter(fileContent);\r\n    // const enText = await translateWord(parsedFile.content);\r\n    const newMatter = {\r\n      ...parsedFile,\r\n      data: { ...parsedFile.data, date: UTCToString(parsedFile.data.date) },\r\n    };\r\n    const picPath = makeImportPic(await marked(parsedFile.content));\r\n    const htmlText = HtmlToNext(await marked(parsedFile.content));\r\n    // const enHtmlText = HtmlToNext(await marked(enText));\r\n\r\n    //新增翻译\r\n    compiledFiles.push(\r\n      picPath\r\n        ? {\r\n            id: simpleHash(file),\r\n            mdMatter: newMatter,\r\n            mdHtml: htmlText,\r\n            other: {\r\n              picPath: picPath,\r\n            },\r\n          }\r\n        : { id: simpleHash(file), mdMatter: newMatter, mdHtml: htmlText }\r\n    );\r\n  }\r\n\r\n  return compiledFiles;\r\n}\r\n","import dayjs from \"dayjs\";\r\n\r\nexport function UTCToString(date: string): string {\r\n  return dayjs(date).format(\"YYYY-MM-DD\");\r\n}\r\n\r\nexport const currentDate = dayjs().format(\"YYYY-MM-DD\");\r\n","import path from \"path\";\r\nimport { mdFile } from \"../compile/extractMd\";\r\nexport const basePath = path.join(process.cwd(), \"./\");\r\nexport const ESSAYCSS = `\r\nblockquote {\r\n  margin-left: 0;\r\n  border-left: 4px solid #bac2cb;\r\n  padding-left: 12px;\r\n  color: #4e5969;\r\n}\r\nul {\r\n  margin: 0;\r\n  padding-left: 30px;\r\n}\r\na {\r\n  text-decoration: none; /* 移除下划线 */\r\n  color: #1d9bf0; /* 使用继承的颜色 */\r\n  cursor: pointer; /* 修改鼠标样式为指针 */\r\n  outline: none; /* 移除默认的焦点边框 */\r\n}\r\np {\r\n  margin-top: 18px;\r\n  margin-bottom: 18px;\r\n}\r\nh1,\r\nh2,\r\nh3,\r\nh4,\r\nh5,\r\nh6 {\r\n  margin-top: 30px;\r\n  margin-bottom: 10px;\r\n  text-decoration: underline;\r\n  text-underline-offset: 6px;\r\n}\r\n@media screen and (max-width: 540px) {\r\n  h1 {\r\n    font-size: 1.5em; /* 1.5倍于基础字体大小 */\r\n    line-height: 1.5em;\r\n  }\r\n\r\n  h2 {\r\n    font-size: 1.35em; /* 1.25倍于基础字体大小 */\r\n    line-height: 1.5em;\r\n  }\r\n\r\n  h3 {\r\n    font-size: 1.2em; /* 基础字体大小 */\r\n    line-height: 1.5em;\r\n  }\r\n  h4 {\r\n    font-size: 1.05em; /* 基础字体大小 */\r\n    line-height: 1.5em;\r\n  }\r\n  h5 {\r\n    font-size: 1em; /* 基础字体大小 */\r\n    line-height: 1.5em;\r\n  }\r\n  h6 {\r\n    font-size: 1em; /* 基础字体大小 */\r\n    line-height: 1.5em;\r\n  }\r\n}\r\na:hover{\r\n  color:#0c7ad8\r\n}\r\n`;\r\n\r\nexport function makeEssay(title: string, date: string) {\r\n  const content = `---\r\ntitle: ${title}\r\ndate: ${date}\r\ncategories: \r\nexcerpt: \r\n---\r\n    `;\r\n  return content;\r\n}\r\nexport function makeImportPic(html: string) {\r\n  let IMGIMPORT = \"\";\r\n  const fileImgs = html.match(/<img\\s+src=\"(.*?)\"\\s+alt=\"(.*?)\".*?\\/>/g);\r\n  const importStatements = fileImgs?.map((img, index) => {\r\n    const [, srcValues] = img.match(/src\\s*=\"(.*?)\"/) || [];\r\n    const oneSrc = srcValues.split(\"/\");\r\n    const src = oneSrc[oneSrc.length - 1];\r\n    return (\r\n      `//@ts-ignore` +\r\n      \"\\n\" +\r\n      `import ${src.slice(0, src.lastIndexOf(\".\"))} from \"@/public${srcValues}\"`\r\n    );\r\n  });\r\n\r\n  if (importStatements) {\r\n    IMGIMPORT += importStatements.join(\"\\n\");\r\n  }\r\n  return IMGIMPORT;\r\n}\r\nexport async function makeEssayPage(file: mdFile) {\r\n  let TEMPLATE = `\r\n  import Image from \"next/image\";\r\nimport dynamic from \"next/dynamic\";\r\n  ${file.other ? file.other.picPath : \"\"}\r\n  // @ts-ignore\r\nimport { Prism as SyntaxHighlighter } from \"react-syntax-highlighter\";\r\n// @ts-ignore\r\nimport { oneLight } from \"react-syntax-highlighter/dist/esm/styles/prism\";\r\nimport \"@/app/[language]/essay/essay.css\";\r\nexport default function Page() {\r\n  const Comment = dynamic(() => import(\"@/app/[language]/components/Comment\"), {\r\n    ssr: false,\r\n  });\r\n  return (\r\n    <div>\r\n    <div className=\"mt-8 bg-white flex flex-col items-start text-lg shadow-lg rounded-sm\">\r\n    <span className=\"text-4xl text-left lg:px-20 md:px-[2.5vw] px-4 pt-12 text-visit-font font-bold\">\r\n      ${file.mdMatter.data.title}\r\n    </span>\r\n    <span className=\"text-[#86909C] lg:px-20 pt-5 px-4 text-xl mb-5 md:px-[2.5vw]\">\r\n      Categories: ${file.mdMatter.data.categories} &nbsp;  ${\r\n    file.mdMatter.data.date\r\n  }\r\n    </span>\r\n    <div className=\"flex text-start break-words flex-col pb-12 lg:px-20 lg:w-[740px] md:w-[90vw] md:px-[2.5vw] w-[95vw] px-[2.5vw]\">\r\n      ${file.mdHtml}\r\n    </div>\r\n    \r\n  </div>\r\n  <div className=\"mt-12 py-8 bg-white px-6\">\r\n  <Comment />\r\n</div>\r\n    </div>\r\n  );\r\n}`;\r\n\r\n  return TEMPLATE;\r\n}\r\n","import he from \"he\";\r\nfunction ImageRepimg(html: string) {\r\n  const processedHtml = html.replace(\r\n    /<img\\s+src=\"([^\"]*)\"\\s+alt=\"([^\"]*)\"(?:\\s+width=\"([^\"]*)\")?[^>]*\\/>/g,\r\n    function (match, src, alt) {\r\n      const modifiedSrc = src.split(\"/\");\r\n      const newSrc = modifiedSrc[modifiedSrc.length - 1]; // Your modification logic for src\r\n\r\n      const modifiedAlt = alt; // Your modification logic for alt\r\n\r\n      return `<Image src={${newSrc.slice(\r\n        0,\r\n        newSrc.lastIndexOf(\".\")\r\n      )}} alt=\"${modifiedAlt}\" \r\n      sizes=\"100vw\"\r\n      style={{\r\n        width: \"100%\",\r\n        height: 'auto',\r\n      }} />`;\r\n    }\r\n  );\r\n  return processedHtml;\r\n}\r\nfunction replaceClassName(html: string) {\r\n  const processedHtml = html.replace(/class=/g, \"className=\");\r\n  return processedHtml;\r\n}\r\nfunction highLightHtml(html: string) {\r\n  // 在代码块内的特殊字符前加上 \\\r\n  const replacedString1 = html.replace(\r\n    /<pre><code className=\"language-(\\w+)\">([\\s\\S]*?)<\\/code><\\/pre>/g,\r\n    (_, language, codeContent) => {\r\n      //转义符删除\r\n      const decodeCode = he.decode(codeContent);\r\n      const codeWithBackslash = decodeCode.replace(/([^\\w\\s\"'])/g, \"\\\\$1\");\r\n      return `<SyntaxHighlighter language=\"${language}\" style={oneLight} showLineNumbers>{ \\`${codeWithBackslash}\\` }</SyntaxHighlighter>`;\r\n    }\r\n  );\r\n\r\n  return replacedString1;\r\n}\r\nexport function HtmlToNext(html: string) {\r\n  //替换img标签\r\n  const step1Html = ImageRepimg(html);\r\n  //替换class为className\r\n  const step2Html = replaceClassName(step1Html);\r\n  //高亮代码\r\n  const step3Html = highLightHtml(step2Html);\r\n  //闭合分割线\r\n  const step4Html = step3Html.replace(/<hr>/g, \"<hr />\");\r\n  return step4Html;\r\n}\r\n","import path from \"path\";\r\nimport fs from \"fs\";\r\nimport { basePath, makeEssayPage } from \"../constant/content\";\r\nimport { mdFile } from \"../compile/extractMd\";\r\nimport { writeCSS } from \"./EssayCss\";\r\nimport { rimrafSync } from \"rimraf\";\r\nimport { getRandomColor } from \"../utils/randomColor\";\r\n\r\nexport function writeFile(files: mdFile[]) {\r\n  // rimrafSync(`${basePath}/app/[language]/essay`, {\r\n  //   preserveRoot: false,\r\n  // });\r\n  files.forEach(async (file) => {\r\n    rimrafSync(`${basePath}/app/[language]/essay/${file.mdMatter.data.date}`, {\r\n      preserveRoot: false,\r\n    });\r\n    const foldPath = `${basePath}/app/[language]/essay/${file.mdMatter.data.date}/${file.id}`;\r\n    const filePath = path.join(foldPath, \"page.tsx\");\r\n    const content = await makeEssayPage(file);\r\n\r\n    fs.mkdir(foldPath, { recursive: true }, (error) => {\r\n      if (error) {\r\n        console.log(error);\r\n      } else {\r\n        writeCSS();\r\n        fs.writeFile(filePath, content, (err) => {\r\n          if (err) {\r\n            console.error(\"Error creating file:\", err);\r\n          } else {\r\n            console.log(\r\n              `Page-${getRandomColor(\r\n                file.mdMatter.data.title\r\n              )} created successfully.`\r\n            );\r\n          }\r\n        });\r\n      }\r\n    });\r\n  });\r\n}\r\n","import path from \"path\";\r\nimport fs from \"fs\";\r\nimport { basePath, ESSAYCSS } from \"../constant/content\";\r\nexport function writeCSS() {\r\n  const filePath = path.join(basePath, \"/app/[language]/essay/essay.css\");\r\n  fs.access(filePath, fs.constants.F_OK, (err) => {\r\n    if (err) {\r\n      // 文件不存在，写入文件\r\n      fs.writeFile(filePath, ESSAYCSS, (writeErr) => {\r\n        if (writeErr) throw writeErr;\r\n      });\r\n    }\r\n  });\r\n}\r\n","import pkg from \"picocolors\";\r\nconst { cyan, yellow, green, red, blue } = pkg;\r\nexport function getRandomColor(string: string) {\r\n  const colors = [cyan, yellow, green, red, blue];\r\n  const randomIndex = Math.floor(Math.random() * colors.length);\r\n  return colors[randomIndex](string);\r\n}\r\n","import { compileFile } from \"../compile/extractMd\";\r\nimport { writeFile } from \"../create/writeFiles\";\r\nimport cac from \"cac\";\r\nimport { createEssay } from \"../create/createMD\";\r\nimport { currentDate } from \"../utils/time\";\r\nimport { createImgs } from \"../create/createImg\";\r\nimport { removePage } from \"../remove/removePage\";\r\nimport { writeFileData } from \"../create/createFileData\";\r\nimport { index, init } from \"../deploy\";\r\nimport { translateWord } from \"../utils/translate\";\r\nconst cli = cac();\r\ncli\r\n  .command(\"compile [project]\", \"mdToTsx\")\r\n  .option(\"-a, --all\", \"Compile all projects\")\r\n  .action(async (project, options) => {\r\n    const { all } = options;\r\n    const files = all ? await compileFile() : await compileFile(project);\r\n    writeFile(files);\r\n    writeFileData();\r\n  });\r\ncli\r\n  .command(\"create [project]\", \"create the new essay\")\r\n  .action(async (project) => {\r\n    createEssay(currentDate, project);\r\n    createImgs(project);\r\n  });\r\ncli\r\n  .command(\"remove [project]\", \"remove the new essay\")\r\n  .action(async (project) => {\r\n    removePage(project);\r\n  });\r\ncli.command(\"init\", \"for deploy\").action(async () => {\r\n  init();\r\n});\r\ncli.command(\"deploy\", \"deploy the new essay\").action(async () => {\r\n  index();\r\n});\r\ncli.command(\"t\", \"翻译\").action(async () => {\r\n  translateWord(`该怎么处理md文档咋办`);\r\n});\r\ncli.parse();\r\n","import path from \"path\";\r\nimport fs from \"fs\";\r\nimport { basePath, makeEssay } from \"../constant/content\";\r\nimport { getRandomColor } from \"../utils/randomColor\";\r\n\r\nexport function createEssay(date: string, title: string) {\r\n  const _postsPath = path.join(basePath, \"/_posts\");\r\n  const filePath = path.join(_postsPath, `${title}.md`);\r\n  const mdFile = makeEssay(title, date);\r\n  fs.mkdir(_postsPath, { recursive: true }, (error) => {\r\n    if (error) {\r\n      console.log(error);\r\n    } else {\r\n      fs.writeFile(filePath, mdFile, (err) => {\r\n        if (err) {\r\n          console.error(\"Error creating file:\", err);\r\n        } else {\r\n          console.log(`Essay ${getRandomColor(title)} created successfully.`);\r\n        }\r\n      });\r\n    }\r\n  });\r\n}\r\n","import path from \"path\";\r\nimport fs from \"fs\";\r\nimport { basePath } from \"../constant/content\";\r\n\r\nexport function createImgs(title: string) {\r\n  const foldPath = `${basePath}/public/imgs/${title}`;\r\n  fs.mkdir(foldPath, { recursive: true }, (error) => {\r\n    if (error) console.log(error);\r\n  });\r\n}\r\n","import path from \"path\";\r\nimport fs from \"fs\";\r\nimport { rimraf } from \"rimraf\";\r\nimport { basePath } from \"../constant/content\";\r\n\r\nexport function removePage(file: string) {\r\n  //   const PagePath = `${basePath}/app/essay/${file.mdMatter.data.date}`;\r\n  const MdPath = path.join(basePath, `/_posts/${file}.md`);\r\n  fs.unlink(MdPath, (err) => {\r\n    if (err) {\r\n      console.error(`Error deleting file: ${err}`);\r\n    } else {\r\n      console.log(`File-${file} deleted successfully`);\r\n    }\r\n  });\r\n  const foldPath = `${basePath}/public/imgs/${file}`;\r\n  rimraf(foldPath, { preserveRoot: false });\r\n}\r\n","import path from \"path\";\r\nimport fs from \"fs\";\r\nimport { basePath } from \"../constant/content\";\r\nimport { compileFile } from \"../compile/extractMd\";\r\nimport { transformType } from \"../utils/transformType\";\r\nimport { sortByDate } from \"../utils/sortByDate\";\r\nexport function writeFileData() {\r\n  const fileDataPath = path.join(\r\n    `${basePath}/app/[language]/lib/`,\r\n    \"fileData.js\"\r\n  );\r\n  const fileDataFolderPath = `${basePath}/app/[language]/lib/`;\r\n  fs.mkdir(fileDataFolderPath, { recursive: true }, async (error) => {\r\n    if (error) {\r\n      console.log(error);\r\n    } else {\r\n      const fileData = sortByDate(transformType(await compileFile()));\r\n      fs.writeFile(\r\n        fileDataPath,\r\n        `/**\r\n        * @property {string} title - 文章标题\r\n        * @property {string} date - 文章日期\r\n        * @property {string} categories - 文章分类：Project,Weekly,Life,Technology\r\n        * @property {string} excerpt - 概述\r\n        * @property {string} html - 解析过后的html\r\n        * @property {string} id - id\r\n        * \r\n        */\r\n        const DATA = ${JSON.stringify(fileData)} \r\n        module.exports = {\r\n            DATA,\r\n          };\r\n          `,\r\n        (err) => {\r\n          if (err) {\r\n            console.error(\"Error creating file:\", err);\r\n          }\r\n        }\r\n      );\r\n    }\r\n  });\r\n}\r\n","import { mdFile } from \"../compile/extractMd\";\r\n\r\n//解析类型\r\nexport function transformType(files: mdFile[]) {\r\n  let newData: { [x: string]: string }[] = [];\r\n  files.forEach((file, index) => {\r\n    const { mdMatter, mdHtml, id } = file;\r\n    const { data } = mdMatter;\r\n    const newMatter = {\r\n      ...data,\r\n      id: id,\r\n      html: mdHtml,\r\n    };\r\n    newData.push(newMatter);\r\n  });\r\n  return newData;\r\n}\r\n\r\n// //操作一下数据库\r\n\r\n// async function uploadBlogs(client, files: any[]) {\r\n//   try {\r\n//     await client.sql`CREATE EXTENSION IF NOT EXISTS \"uuid-ossp\"`;\r\n//     // Create the \"invoices\" table if it doesn't exist\r\n//     const createTable = await client.sql`\r\n//       CREATE TABLE IF NOT EXISTS blogs (\r\n//         id SERIAL PRIMARY KEY,\r\n//         title VARCHAR(255) NOT NULL,\r\n//         date DATE,\r\n//         categories VARCHAR(255),\r\n//         excerpt TEXT,\r\n//         html TEXT\r\n//       );\r\n//     `;\r\n\r\n//     console.log(`Created \"blog\" table`);\r\n\r\n//     // Insert data into the \"users\" table\r\n//     const insertedBlogs = await Promise.all(\r\n//       files.map(async (file) => {\r\n//         return client.sql`\r\n//         INSERT INTO blogs (title, date, categories, excerpt, html)\r\n//         VALUES (${file.id}, ${file.title}, ${file.date}, ${file.categories}, ${file.excerpt}, ${file.html})\r\n//         ON CONFLICT (id) DO NOTHING;\r\n//       `;\r\n//       })\r\n//     );\r\n\r\n//     console.log(`upload ${insertedBlogs.length} blogs`);\r\n\r\n//     return {\r\n//       createTable,\r\n//       blogs: insertedBlogs,\r\n//     };\r\n//   } catch (error) {\r\n//     console.error(\"Error upload blogs:\", error);\r\n//     throw error;\r\n//   }\r\n// }\r\n\r\n// //main\r\n// export async function main() {\r\n//   const files = transformType(await fileToJSON());\r\n//   const client = await db.connect();\r\n//   await uploadBlogs(client, files);\r\n//   await client.end();\r\n// }\r\n// main().catch((err) => {\r\n//   console.error(\r\n//     \"An error occurred while attempting to seed the database:\",\r\n//     err\r\n//   );\r\n// });\r\n","export function sortByDate(array: { [x: string]: string }[]) {\r\n  // 使用 Array.sort() 方法进行排序\r\n  array.sort(function (a, b) {\r\n    // 将日期字符串转换为日期对象进行比较\r\n    const dateA = new Date(a.date).getTime();\r\n    const dateB = new Date(b.date).getTime();\r\n\r\n    // 返回比较的结果\r\n    return dateB - dateA;\r\n  });\r\n\r\n  // 返回排序后的数组\r\n  return array;\r\n}\r\n","import fs from \"fs\";\r\nimport path from \"path\";\r\nimport { spawn } from \"child_process\";\r\nimport { readConfig } from \"../utils/readConfig\";\r\nimport { getRandomColor } from \"../utils/randomColor\";\r\nconst currentDir = process.cwd();\r\nconst gitFolderPath = path.join(currentDir, \".git\");\r\nfunction git(...args) {\r\n  return new Promise((resolve, reject) => {\r\n    const child = spawn(\"git\", args, { cwd: currentDir });\r\n    child.stdout.on(\"data\", (data) => {\r\n      console.log(data.toString());\r\n    });\r\n    child.stderr.on(\"data\", (data) => {\r\n      console.error(data.toString());\r\n    });\r\n    child.on(\"exit\", (code) => {\r\n      if (code === 0) {\r\n        resolve(\"over\");\r\n      } else {\r\n        reject();\r\n      }\r\n    });\r\n  });\r\n}\r\n// * 自定义部署路径仓库以及初始化\r\nexport async function init() {\r\n  const json = await readConfig();\r\n  const { deployCon } = json;\r\n  // 删除 .git 文件夹\r\n  fs.rm(gitFolderPath, { recursive: true, force: true }, (err) => {\r\n    if (err) {\r\n      console.error(\"删除 .git 文件夹时出错：\", err);\r\n      return;\r\n    }\r\n    git(\"init\", \"-b\", `main`).then(() => {\r\n      console.log(\"init over\");\r\n      git(\r\n        \"remote\",\r\n        \"add\",\r\n        `${deployCon.remote_store_name}`,\r\n        `${deployCon.remote_store_url}`\r\n      ).then(() => {\r\n        git(\"add\", \".\").then(() => {\r\n          git(\"commit\", \"-m\", \"Initial commit\").then(() => {});\r\n        });\r\n      });\r\n    });\r\n  });\r\n  console.log(getRandomColor(\"please push to remote rep --force\"));\r\n}\r\n\r\nexport async function index() {\r\n  const json = await readConfig();\r\n  const { deployCon } = json;\r\n  git(\"add\", \".\").then(() => {\r\n    git(\"commit\", \"-m\", `${deployCon.commitMessage}`).then(() => {\r\n      git(\"push\", `${deployCon.remote_store_name}`, `${deployCon.branch}`);\r\n    });\r\n  });\r\n}\r\n","import fs from \"fs\";\r\nimport os from \"os\";\r\nimport path from \"path\";\r\nimport { basePath } from \"../constant/content\";\r\nimport { Config } from \"../../types/config\";\r\n\r\n// JSON 文件路径\r\n\r\nexport function readConfig(): Promise<Config> {\r\n  const jsonFilePath = path.join(basePath, \"_blog.json\");\r\n  return new Promise((resolve, reject) => {\r\n    fs.readFile(jsonFilePath, \"utf8\", (err, data) => {\r\n      if (err) {\r\n        reject(err);\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const jsonData = JSON.parse(data);\r\n        resolve(jsonData);\r\n      } catch (error) {\r\n        reject(error);\r\n      }\r\n    });\r\n  });\r\n}\r\n","import crypto from \"crypto\";\r\nimport fetch from \"node-fetch\";\r\nimport \"dotenv/config\";\r\nconsole.log(process.env.APPID);\r\n\r\nconst URL = \"https://fanyi-api.baidu.com/api/trans/vip/translate\";\r\nconst APPID = process.env.APPID;\r\nconst SIGN = process.env.SIGN;\r\nconst salt = \"1435660288\";\r\ninterface TranslateRep {\r\n  to: string;\r\n  from: string;\r\n  trans_result: { src: string; dst: string }[];\r\n}\r\nfunction utf8Encode(str: string): string {\r\n  return Buffer.from(str, \"utf-8\").toString();\r\n}\r\n\r\nfunction generateSignature(\r\n  appid: string,\r\n  q: string,\r\n  salt: string,\r\n  secretKey: string\r\n): string {\r\n  // 拼接字符串1\r\n  const str1 = `${appid}${q}${salt}${secretKey}`;\r\n  // 计算签名（MD5加密）\r\n  const sign = crypto.createHash(\"md5\").update(str1, \"utf8\").digest(\"hex\");\r\n\r\n  return sign;\r\n}\r\nexport async function translateWord(q: string): Promise<string> {\r\n  if (!APPID || !SIGN) {\r\n    throw new Error(\"no APPID or no SIGN\");\r\n  } else {\r\n    const sign = generateSignature(APPID, q, salt, SIGN);\r\n    const from = \"zh\";\r\n    const to = \"en\";\r\n    const finallyUrl =\r\n      URL +\r\n      `?q=${utf8Encode(q)}` +\r\n      `&from=${from}` +\r\n      `&to=${to}` +\r\n      `&appid=${APPID}` +\r\n      `&salt=${salt}` +\r\n      `&sign=${sign}`;\r\n\r\n    const rep = await fetch(finallyUrl);\r\n    const data: TranslateRep = (await rep.json()) as TranslateRep;\r\n    console.log(data);\r\n    const res = data.trans_result.reduce((pre, nex) => {\r\n      return { src: pre.src + nex.src, dst: pre.dst + nex.dst };\r\n    });\r\n\r\n    console.log(res);\r\n\r\n    return res.dst;\r\n  }\r\n}\r\n"],"mappings":"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","names":["path","index","path","path","fs","path","fs","path","fs","path","fs","path","fs","path","fs","fs","fs","path","fs","path","fs","path","fs","index","path","fs","fs","path","fs","path","path","fs","path","fs","salt"]}